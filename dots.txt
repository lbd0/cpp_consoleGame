□■

□□□□■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□□□□□□■□□□■□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□■■■■■□■□■■■■■□■□■■■■□■□□□□□□□□□□□□□□□□□□□□□□
□□■□■□□□□□■□■□□■□□□■□□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□■□■□□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□□□■□□□□□■□■□□■□□■□■□□■■■□□■□■□□□□□□□□□□□□□□□□□□□□□□
□■■■■■■■□□■□■□□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□■■■■■□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□■□□□■□□□□□□□□■□□□■□□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□■□□□■□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□


□□□□■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□□□□□□■□□□■□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□■□■□□□□■■■■■□■□■■■■■□■□■■■■□■□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□■□■□□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□□□■□□□□□■□■□□■□□■□■□□■■■□□■□■□□□□□□□□□□□□□□□□□□□□□□
□■■■■■■■□□■□■□□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□■■■■■□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□■□□□■□□□□□□□□■□□□■□□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□■□□□■□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□


□□□□■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□■□□□■□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□■■■■■□■□■■■■■□■□■■■■□■□□□□□□□□□□□□□□□□□□□□□□
□□■□■□□□□□■□■□□■□□□■□□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□■□■□□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□□□■□□□□□■□■□□■□□■□■□□■■■□□■□■□□□□□□□□□□□□□□□□□□□□□□
□■■■■■■■□□■□■□□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□■■■■■□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□■□□□■□□□□□□□□■□□□■□□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□■□□□■□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

□□□□■□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□■□□□□□□□■□□□□□□■□□
□□■■■■■□□□□□□□□■□□□■□□□■□□□□□□■□□
□□■□■□□□□■■■■■□■□■■■■■□■□■■■■□■□□
□□■■■■■□□□■□■□□■□□□■□□□■□□□□■□■□□
□□□□■□□□□□■□■□□■□□■□■□□■■■□□■□■□□
□■■■■■■■□□■□■□□■□□■□■□□■□□□□■□■□□
□□□■■■□□□■■■■■□■□□■□■□□■□□□□■□■□□
□□■□□□■□□□□□□□□■□□□■□□□■□□□□■□■□□
□□■□□□■□□□□□□□□■□□□□□□□■□□□□□□■□□
□□□■■■□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

□□□□■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□□□□□□■□□□■□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□■□■□□□□■■■■■□■□■■■■■□■□■■■■□■□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□■□■□□■□□□■□□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□□□■□□□□□■□■□□■□□■□■□□■■■□□■□■□□□□□□□□□□□□□□□□□□□□□□
□■■■■■■■□□■□■□□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□■■■■■□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□■□□□■□□□□□□□□■□□□■□□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□■□□□■□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

□□□□■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□□□□□□■□□□■□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□■□■□□□□■■■■■□■□■■■■■□■□■■■■□■□□□□□□□□□□□□□□□□□□□□□□
□□■■■■■□□□■□■□□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□□□■□□□□□■□■□□■□□■□■□□■■■□□■□■□□□□□□□□□□□□□□□□□□□□□□
□■■■■■■■□□■□■□□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□■■■■■□■□□■□■□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□■□□□■□□□□□□□□■□□□■□□□■□□□□■□■□□□□□□□□□□□□□□□□□□□□□□
□□■□□□■□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□□■■■□□□□□□□□□■□□□□□□□■□□□□□□■□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□
□□■□■□□□□□□□□□□□□□
□■■■■■□□□□□□□□□□□□
□□■■■□□□□□□□□□□□□□
□□□■□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□

□□□■□□□
□□■■■□□
□■■■■■□

□□□□□□□□□□□□□□□□□□□□□□
□□■■□□□□□□□□□□□□□■■□□□
□■□□■□□□□□□□□□□□■□□■□□
□■□□□■□□■■■■■□□■□□□■□□
□■□□□□■■□□□□□■■□□□□■□□
□□■□□□□□□□□□□□□□□□■□□□
□□■□□□□□□□□□□□□□□□■□□□
□■□■■■■□□□□□□□■■■■□■□□
□■□■□□■■□□□□□■■□□■□■□□
□■□■□□■□■□□□■□■□□■□■□□
□■□□■□■□■□□□■□■□■□□■□□
□□■□□■■■□□□□□■■■□□■□□□
□□■□□□□□□□□□□□□□□□■□□□
□□□■■□□□□■■■□□□□■■□□□□
□□□□□■■■□□□□□■■■□□□□□□
□□□□□□□□■■■■■□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□

□□□□□□□□□□□□□□□□□□□□□□
□□■■□□□□□□□□□□□□□■■□□□
□■□□■□□□□□□□□□□□■□□■□□
□■□□□■□□■■■■■□□■□□□■□□
□■□□□□■■□□□□□■■□□□□■□□
□□■□□□□□□□□□□□□□□□■□□□
□□■□□□□□□□□□□□□□□□■□□□
□■□■■■■□□□□□□□■■■■□■□□
□■□■□□□■□□□□□■□□□■□■□□
□■□■■■■■■□□□■■■■■■□■□□
□■□□■□□□■□□□■□□□■□□■□□
□□■□□■■■□□□□□■■■□□■□□□
□□■□□□□□□□□□□□□□□□■□□□
□□□■■□□□□■■■□□□□■■□□□□
□□□□□■■■□□□□□■■■□□□□□□
□□□□□□□□■■■■■□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□

□□□□□□□□□□□□□□□□□□□□□□
□□■■□□□□□□□□□□□□□■■□□□
□■□□■□□□□□□□□□□□■□□■□□
□■□□□■□□■■■■■□□■□□□■□□
□■□□□□■■□□□□□■■□□□□■□□
□□■□□□□□□□□□□□□□□□■□□□
□□■□□□□□□□□□□□□□□□■□□□
□■□■■■■□□□□□□□■■■■□■□□
□■□■■■■■□□□□□■■■■■□■□□
□■□■■■■■■□□□■■■■■■□■□□
□■□□■■■■■□□□■■■■■□□■□□
□□■□□■■■□□□□□■■■□□■□□□
□□■□□□□□□□□□□□□□□□■□□□
□□□■■□□□□■■■□□□□■■□□□□
□□□□□■■■□□□□□■■■□□□□□□
□□□□□□□□■■■■■□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□

□□□□□□□□□□□□□□□□□□□□
□□■■□□□□□□□□□□□■■□□□
□■□□■□□□□□□□□□■□□■□□
□■□□□■□□■■■□□■□□□■□□
□■□□□□■■□□□■■□□□□■□□
□□■□□□□□□□□□□□□□■□□□
□□■□□□□□□□□□□□□□■□□□
□■□■■■■□□□□□■■■■□■□□
□■□■■■■■□□□■■■■■□■□□
□■□■■■■■■□■■■■■■□■□□
□■□□■■■■■□■■■■■□□■□□
□□■□□■■■□□□■■■□□■□□□
□□■□□□□□□□□□□□□□■□□□
□□□■■□□□□■□□□□■■□□□□
□□□□□■■■□□□■■■□□□□□□
□□□□□□□□■■■□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□

□■□□■□□■■■□■
■□■□■■□□■□■■
□□□□■□□■□■□■
□□□■□□□□□■■■
□□■□■□□□□■□■
□□□■□□□□□■■■

□■■□
■□□■
■□□■
□■■□

□□■■■■□□□□□□□■■■■□□□
□■□□□□■□□□□□■□□□□■□□
□■□□□□□■□□□■□□□□□■□□
□■□□□□□□■□■□□□□□□■□□
□■□□□□□□□■□□□□□□□■□□
□■□□□□□□□□□□□□□□□■□□
□■□□□□□□□□□□□□□□□■□□
□■□□□□□□□□□□□□□□■□□□
□□■□□□□□□□□□□□□■□□□□
□□□■□□□□□□□□□□■□□□□□
□□□□■□□□□□□□□■□□□□□□
□□□□□■□□□□□□■□□□□□□□
□□□□□□■□□□□■□□□□□□□□
□□□□□□□■□□■□□□□□□□□□
□□□□□□□□■■□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□

□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□
□□□■■■■□□□□■■■■□□□□□
□□■■■■■■□□■■■■■■□□□□
□■■■■■■■■■■■■■■■■□□□
□□■■■■■■■■■■■■■■□□□□
□□□■■■■■■■■■■■■□□□□□
□□□□■■■■■■■■■■□□□□□□
□□□□□■■■■■■■■□□□□□□□
□□□□□□■■■■■■□□□□□□□□
□□□□□□□■■■■□□□□□□□□□
□□□□□□□□■■□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□

□□□■■■■■□□□
□■□□□□□□□■□
■■■■■□■■■■■
□■□□□□□□□■□


□□□□□■□■□□□□□□□■□□□□□□□■□□□□□□□□■□□□□□□□□□□□□□□□□□□□□
□□□□□■□■□□□■■□□■□□■□□■□■□□□■□□■□■□□□□□□□□□□□□□□□□□□□□
■■■■□■□■□□■□□■□■□□■□□■□■□□□■□□■□■□□□□□□□□□□□□□□□□□□□□
□□□■□■□■□□■□□■□■□□■■■■□■■□□■■■■■■□□□□□□□□□□□□□□□□□□□□
□□□■■■□■□□■□□■□■□□■□□■□■□□□■□□■□■□□□□□□□□□□□□□□□□□□□□
□□□■□■□■□□□■■□□■□□■■■■□■□□□■■■■□■□□□□□□□□□□□□□□□□□□□□
□□□■□■□■□□□□□□□■□□□□□■■□□□□□□■□□■□□□□□□□□□□□□□□□□□□□□
□□□■□■□■□□□□■■■■□□□□■□□■□□□□□■■■■□□□□□□□□□□□□□□□□□□□□
□□□□□■□■□□□□■□□■□□□□■□□■□□□□□■□□■□□□□□□□□□□□□□□□□□□□□
□□□□□■□■□□□□■■■■□□□□□■■□□□□□□■■■■□□□□□□□□□□□□□□□□□□□□



□□□□□■□■□□□□□□□■□□□□□□□□□□□□□□□□□■□□□□□□□□□□□□□□□□□□□
□□□□□■□■□□□■■□□■□□□□■■■□□□□■□□□■□■□□□□□□□□□□□□□□□□□□□
■■■■□■□■□□■□□■□■□□□■□□□■□□□■□□□■□■□□□□□□□□□□□□□□□□□□□□
□□□■□■□■□□■□□■□■□□□■□□□■□□□■□□□■□■□□□□□□□□□□□□□□□□□□□
□□□■■■□■□□■□□■□■□□□■□□□■□□□■■■■■■■□□□□□□□□□□□□□□□□□□□
□□□■□■□■□□□■■□□■□□□□■■■□□□□■□□□■□■□□□□□□□□□□□□□□□□□□□
□□□■□■□■□□□□□□□■□□□□□■□□□□□■□□□■□■□□□□□□□□□□□□□□□□□□□
□□□■□■□■□□□□■■■■□□□□□■□□□□□■■■■■□■□□□□□□□□□□□□□□□□□□□
□□□□□■□■□□□□■□□■□□■■■■■■■□□□□□□□□■□□□□□□□□□□□□□□□□□□□
□□□□□■□■□□□□■■■■□□□□□□□□□□□□□□□□□■□□□□□□□□□□□□□□□□□□□


void GameManager::SettingPoo()
{
	poos.clear();
	vector<Poo> temp(poos);
	temp.swap(poos);

	int x, index = 0;
	do
	{
		bool isDouble = false;
		if (index == 9) break;
		x = rand() % 87;
		if (poos.empty()) poos.push_back(Poo(x, 10));
		for (int i = 0; i < poos.size(); i++)
		{
			if (x <= poos[i].GetX()+3 && x >= poos[i].GetX()-3)
			{
				isDouble = true;
				break;
			}
		}
		if (!isDouble)
		{
			poos.push_back(Poo(x, 10));
			index++;
		}
	} while (true);
}

void GameManager::SettingCoin()
{
	coins.clear();
	vector<Coin> ctemp(coins);
	ctemp.swap(coins);

	int x, index = 0;
	do
	{
		bool isDouble = false;
		if (index == 9) break;
		x = rand() % 85;
		if (coins.empty()) coins.push_back(Coin(x, 10));
		for (int i = 0; i < coins.size(); i++)
		{
			if (x <= coins[i].GetX() + 3 && x >= coins[i].GetX() - 3)
			{
				isDouble = true;
				break;
			}
		}
		if (!isDouble)
		{
			coins.push_back(Coin(x, 10));
			index++;
		}
	} while (true);
}